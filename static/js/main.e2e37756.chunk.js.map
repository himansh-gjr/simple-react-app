{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","submitForm","handleSubmit","setState","handleChange","event","console","log","target","value","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"gOAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MAUb,OAAO,gCAAQJ,KAiBFS,EAdD,SAACV,GAAW,IAChBE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEP,cAAeA,EACfO,gBAAiBA,Q,OCYVE,E,4MA9CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAEPM,MAAQ,EAAKD,a,EAEbE,WAAa,WACX,EAAKd,MAAMe,aAAa,EAAKF,OAC7B,EAAKG,SAAS,EAAKJ,e,EA6BrBK,aAAe,SAACC,GACdC,QAAQC,IAAIF,EAAMG,QADM,MAEAH,EAAMG,OAAtBf,EAFgB,EAEhBA,KAAMgB,EAFU,EAEVA,MACd,EAAKN,SAAL,eACGV,EAAOgB,K,uDA9BF,IAAD,EACeC,KAAKV,MAAnBP,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,iCACE,uBAAOiB,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLnB,KAAK,OACLoB,GAAG,OACHJ,MAAOhB,EACPqB,SAAUJ,KAAKN,eAEjB,uBAAOO,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLnB,KAAK,MACLoB,GAAG,MACHJ,MAAOf,EACPoB,SAAUJ,KAAKN,eAEjB,uBAAOQ,KAAK,SAASH,MAAM,SAASd,QAASe,KAAKT,oB,GAjCvCc,aCiCJC,E,4MA9BbhB,MAAQ,CACNiB,WAAY,I,EAcdrB,gBAAkB,SAACJ,GAAW,IACpByB,EAAe,EAAKjB,MAApBiB,WAER,EAAKd,SAAS,CACZc,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM5B,Q,EAKnBU,aAAe,SAACiB,GACd,EAAKhB,SAAS,CAAEc,WAAW,GAAD,mBAAM,EAAKjB,MAAMiB,YAAjB,CAA6BE,O,uDAtBvD,OACE,sBAAKE,UAAU,YAAf,UACE,cAAC,EAAD,CACEhC,cAAeqB,KAAKV,MAAMiB,WAC1BrB,gBAAiBc,KAAKd,kBAExB,cAAC,EAAD,CAAMM,aAAcQ,KAAKR,sB,GAXfa,aCClBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e2e37756.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n\n  return <tbody>{rows}</tbody>;\n};\n\nconst Table = (props) => {\n  const { characterData, removeCharacter } = props;\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody\n        characterData={characterData}\n        removeCharacter={removeCharacter}\n      />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initialState = {\n    name: \"\",\n    job: \"\",\n  };\n  state = this.initialState;\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n\n  handleChange = (event) => {\n    console.log(event.target);\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"./Table.js\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    characters: [],\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <Table\n          characterData={this.state.characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n\n  removeCharacter = (index) => {\n    const { characters } = this.state;\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      }),\n    });\n  };\n\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}